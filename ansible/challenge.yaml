---

- name: provision stack
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
  - name: challenge cfn stack
    cloudformation: >
      stack_name="challenge" state=present
      region=ap-southeast-2 disable_rollback=true
      template=../cfn/challenge-cfn.yml
    register: stack

  - name: show stack outputs
    debug: msg="Stack Outputs {{stack.stack_outputs.ChallengeHostEIP}}"
    
  - name: remember the new host address
    set_fact: challenge_host="{{stack.stack_outputs.ChallengeHostEIP}}"  
    
  - name: add the new ec2 instance to the inventory
    add_host:
      hostname: "{{challenge_host}}"
      groups: ec2
      
- name: use the new host
  hosts: hostvars['localhost']['stack.stack_outputs.ChallengeHostEIP']
  remote_user: ec2-user
  
  tasks:
  - name: show fact
    debug: msg="Challenge Host IPAddr {{ansible_default_ipv4.address}}"
    
  - name: ensure Docker is running
    become: yes
    become_user: root
    service:
      name: docker
      enabled: yes
      state: started
      
  - name: install pcp
    become: yes
    become_user: root
    package:
      name: pcp
      state: present
        
  - name: install pcp pmda for docker
    become: yes
    become_user: root
    package:
      name: pcp-pmda-docker
      state: present
      
  - name: set docker pmda to auto start
    become: yes
    become_user: root
    copy:
      content: '# instll docker pmda'
      dest: /var/lib/pcp/pmdas/docker/.NeedInstall
      
  - name: configure pmlogger for docker
    become: yes
    become_user: root
    copy:
      src: files/config.pmlog.docker
      dest: /var/lib/pcp/config/pmlogger/config.docker    
      owner: root
      group: root
      mode: 0644
                    
  - name: update pmlogger control for docker
    become: yes
    become_user: root
    copy:
      content: "LOCALHOSTNAME n   n PCP_LOG_DIR/pmlogger/docker  -r -T24h10m -c config.docker\n"
      dest: /etc/pcp/pmlogger/control.d/docker
      owner: root
      group: root
      mode: 0644
                    
  - name: ensure pmcd is running
    become: yes
    become_user: root
    service:
      name: pmcd
      enabled: yes
      state: started
                    
  - name: ensure pmlogger is running
    become: yes
    become_user: root
    service:
      name: pmlogger
      enabled: yes
      state: started
  
  - name: run an ngnix container
    become: yes
    become_user: root
    docker_container:
      image: "nginx:latest"
      name: challenge
      pull: yes
      ports: "80:80"
      state: started
      
  - name: check if the ngnix server is runnig
    shell: curl -Iqs http://localhost/ | grep -q 'HTTP/1.1 200 OK'
    args:
      warn: false
    
  - name: find the most common word
    shell: curl -qs http://localhost/| tr  '.|\/|!|<|>|\"' ' ' | awk '{for(i=1;i<=NF;i++) a[$i]++} END {for(k in a) print k,a[k]}' | sort -rn -k 2 | head -1
    args:
      warn: false
    register: common_word
    
  - name: display the most common word
    debug: msg="{{common_word.stdout}}"
    